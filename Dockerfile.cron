# syntax=docker.io/docker/dockerfile:1

FROM node:20-alpine

WORKDIR /app

# Install dependencies
RUN apk add --no-cache libc6-compat

# Copy package files
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./

# Install dependencies
RUN \
  if [ -f yarn.lock ]; then yarn install; \
  elif [ -f package-lock.json ]; then npm install; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm install; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Copy necessary files for the cron server
COPY cron-server.ts ./
COPY config ./config
COPY tsconfig.json ./
COPY tsconfig.server.json ./
COPY .env* ./

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3001
ENV HOSTNAME="0.0.0.0"

# Expose port for health checks (optional)
EXPOSE 3001

# Run the cron server
CMD ["npx", "ts-node", "--project", "tsconfig.server.json", "--transpile-only", "cron-server.ts"]
